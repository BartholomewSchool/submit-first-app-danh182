#include <iostream>
using namespace std;

int input1; //declares variables required as integers
int input2;
string(operation); //declares this variable as a string as the operation function requires it to be a string
int answer;

int giveanswer(int d) { //declares the function giveanswer which returns the answer stored in the integer d from a previous function
    cout<<"The answer is: "<< d; //prints "The answer is: " followed by the answer stored in d
    return d; //ends the program
}
int add() { //declares the function add which is run through the operation function
    cout<<"Enter the second number: "<<endl; //asks the user
    cin>>input2;
    answer = input1 + input2;
    giveanswer(answer);
    return answer;
}
int subtract() {
    cout<<"Enter the second number: "<<endl;
    cin>>input2;
    answer = input1 - input2;
    giveanswer(answer);
    return answer;
}
int multiply() {
    cout<<"Enter the second number: "<<endl;
    cin>> input2;
    answer = input1 * input2;
    giveanswer(answer);
    return answer;
}
int divide() {
    cout<<"Enter the second number: "<<endl;
    cin>>input2;
    answer = input1 / input2;
    giveanswer(answer);
    return answer;
}
int square (int a) {
    answer = a*a;
    giveanswer(answer);
    return answer;
}

void sign() {
    cout<<"Enter Operation (+, -, *, /, sq): "<<endl;
    cin>> operation;
    cin.ignore();
    if (operation == "+" or operation == "plus" or operation == "add") {
        add();
    }
    else if (operation == "-" or operation == "minus" or operation == "subtract") {
        subtract();
    }
    else if (operation == "*" or operation == "times" or operation == "multiply") {
        multiply();
    }
    else if (operation == "/" or operation == "divide") {
        divide();
    }
    else if (operation == "sq" or operation == "2" or operation == "square") {
        square(input1);
    }
    else {
        cout<<"Invalid input";
        
    }
}

int main() { 
    cout<<"Enter the first number: "<<endl;
    cin>> input1;
    cin.ignore();
    sign();
}
